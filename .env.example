# Save this file as ".env" at the root of the project
# Also make sure that you have django-dotenv for these variables to load
# properly: https://github.com/jpadilla/django-dotenv

# The name of your saltant hosted project
PROJECT_NAME='best job runner ever'

# Insert hosts, separated by commas. Defaults to '127.0.0.1' if you
# comment out this line. Wrap each host in single quotes, not double
# quotes.
ALLOWED_HOSTS='127.0.0.1',

# Base URL of the site. Essentially just choose one of the allowed hosts
# and prepend it with either "http://" or "https://". If hosting locally
# add the port the site is being hosted on after the IP, as shown in the
# below example.
DJANGO_BASE_URL='http://127.0.0.1:8000'

# Defaults to 'False' if you comment out this line
DEBUG=True

# Keep this secret! Generate a key and put it here!
# https://www.miniwebtool.com/django-secret-key-generator/ was used to
# generate the key you see below.
SECRET_KEY='u-!+0mf3xgpg2es=i9r5o!7grf!@gt!x^(ta9p=m&oz3+l-wi#'

# These are settings for the PostgreSQL database
DATABASE_NAME='saltant'
DATABASE_USER='johnsmith'
DATABASE_USER_PASSWORD='johnsmithspassword'
DATABASE_HOST='localhost'
DATABASE_PORT=''

# These are settings for Celery (see
# http://docs.celeryproject.org/en/latest/userguide/configuration.html)
CELERY_BROKER_URL='ampq://'
CELERY_TIMEZONE='UTC'

# Specify whether to use SSL with RabbitMQ
RABBITMQ_USES_SSL=False

# For workers: absolute path to logs directory on host machine
WORKER_LOGS_DIRECTORY='/path/to/workers/logs/here'
WORKER_SINGULARITY_IMAGES_DIRECTORY='/path/to/workers/singularity/images/here'

# API admin auth token (see
# http://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication)
# for details
ADMIN_AUTH_TOKEN='generatedauthtokenhere'

# Rollbar settings
ROLLBAR_ACCESS_TOKEN='1234'
ROLLBAR_PROJECT_URL='https://rollbar.com/mycompany/myproject/'

# RabbitMQ management URL
RABBITMQ_MANAGEMENT_URL='127.0.0.1:15672'
